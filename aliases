###################### Shortcuts
alias ..='cd ..'
alias ...='cd ../..'
alias ~='cd ~'

alias ls="ls -hF --color"
alias ll="ls -l"
alias la="ll -a"

alias df="df -h"
alias h="history"
alias g="git"

alias vimupdate="vim +BundleInstall! +BundleClean +q"

alias empty="cat /dev/null > "

## Server (Debian) Specific
alias restartapache="sudo /etc/init.d/apache2 restart"
alias restartmysql="sudo /etc/init.d/mysql restart"
alias install="sudo apt-get install"

gitempty () {
	mkdir -p $1
	echo "# Ignore everything in this directory" > $1/.gitignore
	echo "*" >> $1/.gitignore
	echo "# Except this file" >> $1/.gitignore
	echo "!.gitignore" >> $1/.gitignore
	git add $1/.gitignore
}

###################### Gadgets
alias ip="curl -s http://checkip.dyndns.com/ | sed 's/[^0-9\.]//g'"
alias localip="ipconfig getifaddr en1"
alias genpass="cat /dev/urandom | env LC_CTYPE=C tr -cd 'A-Za-z0-9' | head -c 30;echo ''"
alias webshare='python -c "import SimpleHTTPServer;SimpleHTTPServer.test()"' #Share current dir over localhost:8000

u2d () {
    # Unix timestamp to date
    if [[ $OSTYPE == 'darwin10.0' ]]; then
        date -r $1
    else
        date -ud \"1970-01-01 + $1 seconds\"
    fi
}

extract () {
    if [ -f $1 ] ; then
       case $1 in
           *.tar.bz2)   tar xvjf $1    ;;
           *.tar.gz)    tar xvzf $1    ;;
           *.bz2)       bunzip2 $1     ;;
           *.rar)       unrar x $1     ;;
           *.gz)        gunzip $1      ;;
           *.tar)       tar xvf $1     ;;
           *.tbz2)      tar xvjf $1    ;;
           *.tgz)       tar xvzf $1    ;;
           *.zip)       unzip $1       ;;
           *.Z)         uncompress $1  ;;
           *.7z)        7z x $1        ;;
           *)           echo "don't know how to extract '$1'..." ;;
       esac
   else
       echo "'$1' is not a valid file!"
   fi
}

fars () {
    if [ $1 ] ; then
        if [ $2 ] ; then
            grep -r $1 .
            echo "sed -i.backup -e 's/$1/$2/' \`grep -lr $1 .\`"
        else
            echo "'$2' is not a valid string! fars oldstring newstring"
        fi
    else
        echo "'$1' is not a valid string! fars oldstring newstring"
    fi
}

###################### Processes
psx () {
    if [ $1 ] ; then
        ps aux | grep $1 | grep -v grep
    else
        echo "!! Need name to grep for"
    fi
}
psxk () {
    psx $1
    kill -9 `ps auxw | grep -i $1 | awk '{print $2}'`
}

###################### SSH
copykey () {
    if [ -f ~/.ssh/id_rsa.pub ] ; then
        echo "Key exists..."
    else 
        echo "Key doesnt exist, creating..."
        ssh-keygen -f ~/.ssh/id_rsa -b 2048
    fi
    if [ $1 ] ; then
        echo "Transferring..."
        cat ~/.ssh/id_rsa.pub | ssh $@ "mkdir -p ~/.ssh && touch ~/.ssh/authorized_keys && cat - >> ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys && chmod 700 ~/.ssh"
		echo "Done"
    else
        echo "'$1' is not a valid server! Usage: copykey user@hostname"
    fi

}

###################### SVN
svn-rv-ci () {
    if [ $1 ] ; then
        if [ $2 ] ; then
            svn cat -r $1 $2 > $2
        else
            echo "'$2' is not a valid file"
        fi
    else
        echo "'$1' is not a valid revision number"
    fi
}

svnulog () {
    svn log -v $1 | sed -n '/\| $2 \|/,/-----\$/ p'
}

svnstf () {
	svn status | grep "^$1" | awk '{ print $2 }'
}
alias svncf="svnstf C"
alias svnurl="svn info | grep URL | awk  -F': ' '{ print \$2 }'"
alias svnver="change-svn-wc-format.py"

